{"version":3,"sources":["DrawingPad.js","Epicycle.js","index.js","App.js"],"names":["DrawingPad","props","canvasRef","useRef","width","height","hide","addpoint","origin","x","y","isDrawing","prevpos","useEffect","canvas","current","className","context","getContext","resetTransform","clearRect","translate","currentpoint","e","getBoundingClientRect","top","left","clientX","clientY","mouseup","ref","onMouseMove","beginPath","moveTo","lineTo","stroke","onMouseUp","onMouseDown","onMouseLeave","style","display","zIndex","position","onClick","toggleanimation","Epicycle","path","animate","useState","Idx","setIdx","epicycleRef","traceRef","DFT","forEach","item","DFTcompute","interval","length","setInterval","draw","trace","Math","min","clearInterval","len","idx","previdx","connected","strokeStyle","sequence","a","b","i","norm","angle","speed","arc","PI","phase","cos","sin","dist","sqrt","pow","k","re","im","n","phi","size","args","atan2","push","sort","ReactDOM","render","setAnimate","window","innerWidth","innerHeight","special","newpath","slice","document","getElementById"],"mappings":"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","file":"static/js/main.f2cd91a7.chunk.js","sourcesContent":["import React, {useRef, useEffect, useState} from 'react';\r\n\r\n\r\nexport default function DrawingPad(props){\r\n  const canvasRef = useRef(null);\r\n  const {width,height,hide,addpoint} = props;\r\n  const origin = {x:width/2,y:height/2};\r\n  const isDrawing = useRef(false)\r\n  const prevpos = useRef(null);\r\n\r\n  useEffect(()=>{\r\n    const canvas = canvasRef.current;\r\n    canvas.className = props.className;\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n    const context = canvas.getContext('2d');\r\n    context.resetTransform();\r\n    context.clearRect(0,0,width,height);\r\n    context.translate(origin.x,origin.y);\r\n  },[width,height])\r\n\r\n  const currentpoint = e =>{\r\n    const {top,left} = canvasRef.current.getBoundingClientRect();\r\n    return {x:e.clientX - left - origin.x, y:e.clientY - top - origin.y}\r\n  }\r\n\r\n\r\n  const mousedown = e => {\r\n    isDrawing.current = true;\r\n    const {x,y} = currentpoint(e);\r\n    addpoint(x,y,false);\r\n    prevpos.current = {x,y};\r\n  }\r\n\r\n  const mousemove = e => {\r\n    if (isDrawing.current){\r\n      const context = canvasRef.current.getContext('2d');\r\n      const {x,y} = currentpoint(e);\r\n      context.beginPath();\r\n      context.moveTo(prevpos.current.x,prevpos.current.y);\r\n      context.lineTo(x,y);\r\n      prevpos.current = {x,y};\r\n      context.stroke();\r\n      addpoint(x,y,true);\r\n    }\r\n  }\r\n\r\n  const mouseup = e => {\r\n    isDrawing.current = false;\r\n    addpoint(0,0,true,\"new\");\r\n  }\r\n\r\n  const reset = ()=>{\r\n    addpoint(0,0,false,\"reset\");\r\n    const context = canvasRef.current.getContext('2d');\r\n    context.resetTransform();\r\n    context.clearRect(0,0,width,height);\r\n    context.translate(origin.x,origin.y);\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <canvas ref={canvasRef} \r\n        onMouseMove={mousemove} \r\n        onMouseUp = {mouseup} \r\n        onMouseDown = {mousedown} \r\n        onMouseLeave = {mouseup}\r\n        style={{display:hide ?\"none\" : \"\"}}/>\r\n      <div style={{zIndex:50,position:'absolute'}}>\r\n        <button onClick={props.toggleanimation}>Toggle Animation</button>            \r\n        <button onClick={reset} style={{display:hide ?\"none\" : \"\"}}>Clear</button>  \r\n      </div>\r\n    </>\r\n\r\n  )\r\n}\r\n\r\n","import React,{useRef, useEffect,useState} from 'react'\r\n\r\nexport default function Epicycle(props) {\r\n  const {path = [],animate=false,width,height} = props;\r\n  const [Idx, setIdx] = useState(0);\r\n\r\n  const epicycleRef = useRef(null);\r\n  const traceRef = useRef(null);\r\n  const origin = {x:width/2,y:height/2};\r\n  const DFT = useRef([]);\r\n\r\n\r\n  useEffect(() => {\r\n    [epicycleRef,traceRef].forEach(item=>{\r\n      const canvas = item.current;\r\n      canvas.className = props.className;\r\n      canvas.width = width;\r\n      canvas.height = height;\r\n      const context = canvas.getContext('2d');\r\n      context.resetTransform();\r\n      context.translate(origin.x,origin.y);\r\n      context.clearRect(-origin.x,-origin.y,width,height);\r\n    })\r\n  }, [width,height])\r\n\r\n  useEffect(()=>{\r\n    const context = epicycleRef.current.getContext('2d');\r\n    context.clearRect(-origin.x,-origin.y,width,height);\r\n    DFTcompute();\r\n    setIdx(0);\r\n  },[path])\r\n\r\n  useEffect(() => {\r\n    let interval = null;\r\n      if (animate&&path.length > 0) {\r\n        interval = setInterval(() => {\r\n          draw();\r\n          trace();\r\n          setIdx(Idx => Idx + 1);\r\n        }, Math.min(10000/path.length,50));\r\n      } else {\r\n        clearInterval(interval);\r\n        epicycleRef.current.getContext('2d').clearRect(-origin.x,-origin.y,width,height);\r\n        traceRef.current.getContext('2d').clearRect(-origin.x,-origin.y,width,height);\r\n      }\r\n      return () => clearInterval(interval);\r\n    },[animate,Idx]);\r\n\r\n  const trace = () => {\r\n    const context = traceRef.current.getContext('2d');\r\n    let len = path.length;\r\n    if (len > 1){\r\n      let idx = Idx % len;\r\n      switch(idx > 0){\r\n        case false:\r\n          context.clearRect(-origin.x,-origin.y,width,height);\r\n          break;\r\n        case true:\r\n          let previdx = path[idx].connected? (idx-1)%len : idx\r\n          context.beginPath();\r\n          context.moveTo(path[previdx].x,path[previdx].y);\r\n          context.lineTo(path[idx].x,path[idx].y);\r\n          context.stroke();\r\n      }\r\n    } \r\n  }\r\n  \r\n\r\n  const draw = ()=>{\r\n    const context = epicycleRef.current.getContext('2d');\r\n    context.clearRect(-origin.x,-origin.y,width,height);\r\n    context.strokeStyle = '#669999';\r\n    let sequence = DFT.current;\r\n    let len = sequence.length;\r\n    if (len > 1){\r\n      let a = 0;\r\n      let b = 0;\r\n      let {x,y} = path[Idx%len];\r\n      for (var i = 0; i < len; i++){\r\n        let norm = sequence[i].norm/len;\r\n        let angle = sequence[i].angle;\r\n        let speed = sequence[i].speed;\r\n\r\n        context.beginPath();\r\n        context.arc(a,b,norm,0,2*Math.PI);\r\n        context.stroke();\r\n\r\n        context.beginPath();\r\n        context.moveTo(a, b);\r\n        let phase = (2*Math.PI*Idx*speed)/len\r\n        a += norm*Math.cos(angle + phase);\r\n        b += norm*Math.sin(angle + phase);\r\n        context.lineTo(a,b);\r\n        context.stroke();\r\n        if (dist(a,b,x,y) < 5 && i > 30){break;}\r\n      }\r\n      context.beginPath();\r\n      context.moveTo(a,b);\r\n      context.lineTo(x,y);\r\n      context.stroke();\r\n    }\r\n  }\r\n  const dist = (a,b,x,y)=>{\r\n    return Math.sqrt(Math.pow(x-a,2)+Math.pow(y-b,2));\r\n  }\r\n  const DFTcompute = ()=>{\r\n    let sequence = [];\r\n    let len = path.length;\r\n    for (let k = 0; k<len;k++) {\r\n      let re = 0;\r\n      let im = 0;\r\n      for (let n = 0; n<len;n++){\r\n        const phi = (Math.PI*2*k*n)/len;\r\n          re += path[n].x * Math.cos(phi);\r\n          im -= path[n].x * Math.sin(phi);\r\n\r\n          im += path[n].y * Math.cos(phi);\r\n          re += path[n].y * Math.sin(phi);\r\n      }\r\n      let size = Math.sqrt(re*re+im*im);\r\n      let args = Math.atan2(im,re);\r\n      sequence.push({norm:size,angle:args,speed:k})\r\n    }\r\n    sequence.sort((a,b)=> b.norm - a.norm)\r\n    DFT.current = sequence;\r\n  }\r\n\r\n  return (<>\r\n    <canvas ref = {epicycleRef}/>\r\n    <canvas ref = {traceRef}/>\r\n  </>)\r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n\r\n","import React,{useRef,useState} from 'react';\r\nimport DrawingPad from './DrawingPad';\r\nimport Epicycle from './Epicycle'\r\nimport './App.css';\r\n\r\n\r\nexport default function App() {\r\n    const path = useRef([]);\r\n    const [animate, setAnimate] = useState(false);\r\n    const width = window.innerWidth;\r\n    const height = window.innerHeight;\r\n\r\n    const pathAddpoint = (x,y,connected,special=\"none\")=>{\r\n        switch(special){\r\n            case \"reset\":\r\n                path.current = [];\r\n                break;\r\n            case \"new\":\r\n                let newpath = path.current.slice();\r\n                path.current = newpath;\r\n                break;\r\n            default:\r\n                path.current.push({x,y,connected});\r\n                break;\r\n        }\r\n    }\r\n    \r\n    const toggleAnimation = ()=> setAnimate(!animate)\r\n\r\n    return (<>\r\n                <DrawingPad className=\"top center absolute\" width={width} height={height} \r\n                    addpoint={pathAddpoint} \r\n                    toggleanimation = {toggleAnimation}\r\n                    hide={animate}/>  \r\n                <Epicycle className=\"center absolute\" width={width} height={height}\r\n                    animate={animate} \r\n                    path={path.current}/>        \r\n            </>\r\n    )\r\n}\r\n\r\n"],"sourceRoot":""}